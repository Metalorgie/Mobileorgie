/*
 * File: app/controller/News.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Metalorgie.controller.News', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            dataList: '#newsDataList',
            listCard: '#listCard',
            mainNav: '#mainNav',
            detailCard: 'detailnewspanel'
        },

        control: {
            "#newsDataList": {
                itemtap: 'onListItemTap'
            }
        }
    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {
        var me = this, details;

        if (record) {
            details = Ext.create('Metalorgie.view.DetailNewsPanel', {
                title: 'News du ' + record.date
            });

            newsView = details.child('#newsDetails');
            me.getEmbedForNews(record.data.id, function(store){
                newsView.setData(null);
                store.data.each(function(rec) {
                    record.data.embeds.push(rec.data);
                });
                newsView.setData(record.data);
            });
            // set the info
            me.getMainNav().push(details);
        }
    },

    launch: function() {
        var me = this;

        Ext.Viewport.setMasked({ message: 'Chargement...' });
        // use Metalorgie to get news
        me.getNews(function (store) {
            // then bind data to list and show it
            me.getDataList().setStore(store);

            Ext.Viewport.setMasked(false);
        });
    },

    getNews: function(callback) {
        var store = Ext.data.StoreManager.lookup('NewsStore');
        //store.getProxy().setUrl(url);
        store.load(function() {
            callback(store);
        });
    },

    getEmbedForNews: function(newsId, callback) {

        var store = Ext.data.StoreManager.lookup('EmbedStore');
        store.filter([
        Ext.create('Ext.util.Filter', {property: "news", value: newsId})
        ]);
        store.load(function() {
            callback(store);
        });
    }

});